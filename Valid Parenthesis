Java Code //
class Solution {
    public boolean isValid(String s) 
    {
        Stack<Character> st = new Stack<Character>();
        for(int i=0; i<s.length();i++)
        {
            if(s.charAt(i)=='(' || s.charAt(i)=='{' || s.charAt(i)=='[')
            {
                st.push(s.charAt(i));
            }

            else if(st.empty())
            {
                return false;
            }
            else if(st.peek() == '{' && s.charAt(i) == '}')
            {
                st.pop();
            }
             else if(st.peek() == '(' && s.charAt(i) == ')')
            {
                st.pop();
            }
             else if(st.peek() == '[' && s.charAt(i) == ']')
            {
                st.pop();
            }
            else {
                return false;
            }
        }
        return st.isEmpty();
        
    }
}

python code //

def isValid(s: str):
    stack = []

    for char in s:
        if char in '({[':
            stack.append(char)
        elif char in ')}]':
            if not stack or not isMatching(stack.pop(), char):
                return False
        else:
            return False

    return not stack


def isMatching(open_bracket: str, close_bracket: str) -> bool:
    return (open_bracket == '(' and close_bracket == ')') or \
           (open_bracket == '{' and close_bracket == '}') or \
           (open_bracket == '[' and close_bracket == ']')

# Example usage:

s = '[{()}]'
print(isValid(s))
